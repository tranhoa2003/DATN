// topcv-backend/controllers/CVController.js
const CV = require('../models/CV');

// H√†m t·∫°o CV m·ªõi
exports.createCV = async (req, res) => {
  try {
    const newCV = new CV({
      userId: req.user._id, // L·∫•y ID ng∆∞·ªùi d√πng t·ª´ middleware x√°c th·ª±c
      ...req.body, // Ch·ª©a d·ªØ li·ªáu CV t·ª´ frontend
    });
    const savedCV = await newCV.save();
    res.status(201).json(savedCV);
  } catch (error) {
    console.error('L·ªói khi t·∫°o CV:', error);
    res.status(500).json({ message: 'Kh√¥ng th·ªÉ t·∫°o CV.' });
  }
};

// H√†m l·∫•y CV c·ªßa ng∆∞·ªùi d√πng (c√≥ th·ªÉ theo ID ho·∫∑c l·∫•y CV m·ªõi nh·∫•t)
exports.getCV = async (req, res) => {
  try {
    const cvId = req.params.id;
    const cv = await CV.findOne({ _id: cvId, userId: req.user._id });
    if (!cv) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y CV.' });
    }
    res.status(200).json(cv);
  } catch (error) {
    console.error('L·ªói khi l·∫•y CV:', error);
    res.status(500).json({ message: 'Kh√¥ng th·ªÉ l·∫•y CV.' });
  }
};

// H√†m c·∫≠p nh·∫≠t CV
exports.updateCV = async (req, res) => {
  try {
    const cvId = req.params.id;
    const updatedCV = await CV.findOneAndUpdate(
      { _id: cvId, userId: req.user._id },
      req.body,
      { new: true, runValidators: true } // Tr·∫£ v·ªÅ CV ƒë√£ c·∫≠p nh·∫≠t v√† ch·∫°y validators
    );
    if (!updatedCV) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y CV ƒë·ªÉ c·∫≠p nh·∫≠t.' });
    }
    res.status(200).json(updatedCV);
  } catch (error) {
    console.error('L·ªói khi c·∫≠p nh·∫≠t CV:', error);
    res.status(500).json({ message: 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t CV.' });
  }
};

// H√†m x√≥a CV
exports.deleteCV = async (req, res) => {
  try {
    const cvId = req.params.id;
    const deletedCV = await CV.findOneAndDelete({ _id: cvId, userId: req.user._id });
    if (!deletedCV) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y CV ƒë·ªÉ x√≥a.' });
    }
    res.status(200).json({ message: 'CV ƒë√£ ƒë∆∞·ª£c x√≥a th√†nh c√¥ng.' });
  } catch (error) {
    console.error('L·ªói khi x√≥a CV:', error);
    res.status(500).json({ message: 'Kh√¥ng th·ªÉ x√≥a CV.' });
  }
};

// H√†m l·∫•y t·∫•t c·∫£ CV c·ªßa m·ªôt ng∆∞·ªùi d√πng
exports.getUserCVs = async (req, res) => {
  try {
    console.log("üß† User info from token:", req.user);

    const userId = req.user._id;
    const cvs = await CV.find({ userId: userId });


    res.status(200).json(cvs);
  } catch (error) {
    console.error("‚ùå L·ªói khi l·∫•y CV ng∆∞·ªùi d√πng:", error);
    res.status(500).json({ message: "L·ªói server khi l·∫•y danh s√°ch CV" });
  }
};
